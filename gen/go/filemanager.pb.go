// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: filemanager.proto

package fileManagerV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseStatus int32

const (
	ResponseStatus_Ok               ResponseStatus = 0
	ResponseStatus_FileNotFound     ResponseStatus = 1
	ResponseStatus_PermissionDenied ResponseStatus = 2
	ResponseStatus_Internal         ResponseStatus = 3
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "Ok",
		1: "FileNotFound",
		2: "PermissionDenied",
		3: "Internal",
	}
	ResponseStatus_value = map[string]int32{
		"Ok":               0,
		"FileNotFound":     1,
		"PermissionDenied": 2,
		"Internal":         3,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_filemanager_proto_enumTypes[0].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_filemanager_proto_enumTypes[0]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{0}
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_filemanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{0}
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeImage     string                 `protobuf:"bytes,1,opt,name=treeImage,proto3" json:"treeImage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_filemanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetTreeImage() string {
	if x != nil {
		return x.TreeImage
	}
	return ""
}

type PutFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutFileRequest) Reset() {
	*x = PutFileRequest{}
	mi := &file_filemanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFileRequest) ProtoMessage() {}

func (x *PutFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFileRequest.ProtoReflect.Descriptor instead.
func (*PutFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{2}
}

func (x *PutFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PutFileRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type PutFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ResponseStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=fileManager.ResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutFileResponse) Reset() {
	*x = PutFileResponse{}
	mi := &file_filemanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFileResponse) ProtoMessage() {}

func (x *PutFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFileResponse.ProtoReflect.Descriptor instead.
func (*PutFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{3}
}

func (x *PutFileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_Ok
}

type PostFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostFileRequest) Reset() {
	*x = PostFileRequest{}
	mi := &file_filemanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFileRequest) ProtoMessage() {}

func (x *PostFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFileRequest.ProtoReflect.Descriptor instead.
func (*PostFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{4}
}

func (x *PostFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PostFileRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type PostFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ResponseStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=fileManager.ResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostFileResponse) Reset() {
	*x = PostFileResponse{}
	mi := &file_filemanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFileResponse) ProtoMessage() {}

func (x *PostFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFileResponse.ProtoReflect.Descriptor instead.
func (*PostFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{5}
}

func (x *PostFileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_Ok
}

type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_filemanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{6}
}

func (x *GetFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	mi := &file_filemanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{7}
}

func (x *GetFileResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_filemanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ResponseStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=fileManager.ResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_filemanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_Ok
}

type MoveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcFileName   string                 `protobuf:"bytes,1,opt,name=srcFileName,proto3" json:"srcFileName,omitempty"`
	DestFileName  string                 `protobuf:"bytes,2,opt,name=destFileName,proto3" json:"destFileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileRequest) Reset() {
	*x = MoveFileRequest{}
	mi := &file_filemanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRequest) ProtoMessage() {}

func (x *MoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRequest.ProtoReflect.Descriptor instead.
func (*MoveFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{10}
}

func (x *MoveFileRequest) GetSrcFileName() string {
	if x != nil {
		return x.SrcFileName
	}
	return ""
}

func (x *MoveFileRequest) GetDestFileName() string {
	if x != nil {
		return x.DestFileName
	}
	return ""
}

type MoveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ResponseStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=fileManager.ResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileResponse) Reset() {
	*x = MoveFileResponse{}
	mi := &file_filemanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileResponse) ProtoMessage() {}

func (x *MoveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileResponse.ProtoReflect.Descriptor instead.
func (*MoveFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{11}
}

func (x *MoveFileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_Ok
}

type CopyFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcFileName   string                 `protobuf:"bytes,1,opt,name=srcFileName,proto3" json:"srcFileName,omitempty"`
	DestFileName  string                 `protobuf:"bytes,2,opt,name=destFileName,proto3" json:"destFileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileRequest) Reset() {
	*x = CopyFileRequest{}
	mi := &file_filemanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileRequest) ProtoMessage() {}

func (x *CopyFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileRequest.ProtoReflect.Descriptor instead.
func (*CopyFileRequest) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{12}
}

func (x *CopyFileRequest) GetSrcFileName() string {
	if x != nil {
		return x.SrcFileName
	}
	return ""
}

func (x *CopyFileRequest) GetDestFileName() string {
	if x != nil {
		return x.DestFileName
	}
	return ""
}

type CopyFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ResponseStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=fileManager.ResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileResponse) Reset() {
	*x = CopyFileResponse{}
	mi := &file_filemanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileResponse) ProtoMessage() {}

func (x *CopyFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileResponse.ProtoReflect.Descriptor instead.
func (*CopyFileResponse) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{13}
}

func (x *CopyFileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_Ok
}

var File_filemanager_proto protoreflect.FileDescriptor

const file_filemanager_proto_rawDesc = "" +
	"\n" +
	"\x11filemanager.proto\x12\vfileManager\"\x0e\n" +
	"\fLoginRequest\"-\n" +
	"\rLoginResponse\x12\x1c\n" +
	"\ttreeImage\x18\x01 \x01(\tR\ttreeImage\"B\n" +
	"\x0ePutFileRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\"F\n" +
	"\x0fPutFileResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.fileManager.ResponseStatusR\x06status\"C\n" +
	"\x0fPostFileRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\"G\n" +
	"\x10PostFileResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.fileManager.ResponseStatusR\x06status\",\n" +
	"\x0eGetFileRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\"'\n" +
	"\x0fGetFileResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\"/\n" +
	"\x11DeleteFileRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\"I\n" +
	"\x12DeleteFileResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.fileManager.ResponseStatusR\x06status\"W\n" +
	"\x0fMoveFileRequest\x12 \n" +
	"\vsrcFileName\x18\x01 \x01(\tR\vsrcFileName\x12\"\n" +
	"\fdestFileName\x18\x02 \x01(\tR\fdestFileName\"G\n" +
	"\x10MoveFileResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.fileManager.ResponseStatusR\x06status\"W\n" +
	"\x0fCopyFileRequest\x12 \n" +
	"\vsrcFileName\x18\x01 \x01(\tR\vsrcFileName\x12\"\n" +
	"\fdestFileName\x18\x02 \x01(\tR\fdestFileName\"G\n" +
	"\x10CopyFileResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.fileManager.ResponseStatusR\x06status*N\n" +
	"\x0eResponseStatus\x12\x06\n" +
	"\x02Ok\x10\x00\x12\x10\n" +
	"\fFileNotFound\x10\x01\x12\x14\n" +
	"\x10PermissionDenied\x10\x02\x12\f\n" +
	"\bInternal\x10\x032\x89\x04\n" +
	"\vFileManager\x12>\n" +
	"\x05Login\x12\x19.fileManager.LoginRequest\x1a\x1a.fileManager.LoginResponse\x12F\n" +
	"\aPutFile\x12\x1b.fileManager.PutFileRequest\x1a\x1c.fileManager.PutFileResponse(\x01\x12F\n" +
	"\aGetFile\x12\x1b.fileManager.GetFileRequest\x1a\x1c.fileManager.GetFileResponse0\x01\x12I\n" +
	"\bPostFile\x12\x1c.fileManager.PostFileRequest\x1a\x1d.fileManager.PostFileResponse(\x01\x12M\n" +
	"\n" +
	"DeleteFile\x12\x1e.fileManager.DeleteFileRequest\x1a\x1f.fileManager.DeleteFileResponse\x12G\n" +
	"\bMoveFile\x12\x1c.fileManager.MoveFileRequest\x1a\x1d.fileManager.MoveFileResponse\x12G\n" +
	"\bCopyFile\x12\x1c.fileManager.CopyFileRequest\x1a\x1d.fileManager.CopyFileResponseB'Z%ilianBuh.fileManager.v1;fileManagerV1b\x06proto3"

var (
	file_filemanager_proto_rawDescOnce sync.Once
	file_filemanager_proto_rawDescData []byte
)

func file_filemanager_proto_rawDescGZIP() []byte {
	file_filemanager_proto_rawDescOnce.Do(func() {
		file_filemanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filemanager_proto_rawDesc), len(file_filemanager_proto_rawDesc)))
	})
	return file_filemanager_proto_rawDescData
}

var file_filemanager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_filemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_filemanager_proto_goTypes = []any{
	(ResponseStatus)(0),        // 0: fileManager.ResponseStatus
	(*LoginRequest)(nil),       // 1: fileManager.LoginRequest
	(*LoginResponse)(nil),      // 2: fileManager.LoginResponse
	(*PutFileRequest)(nil),     // 3: fileManager.PutFileRequest
	(*PutFileResponse)(nil),    // 4: fileManager.PutFileResponse
	(*PostFileRequest)(nil),    // 5: fileManager.PostFileRequest
	(*PostFileResponse)(nil),   // 6: fileManager.PostFileResponse
	(*GetFileRequest)(nil),     // 7: fileManager.GetFileRequest
	(*GetFileResponse)(nil),    // 8: fileManager.GetFileResponse
	(*DeleteFileRequest)(nil),  // 9: fileManager.DeleteFileRequest
	(*DeleteFileResponse)(nil), // 10: fileManager.DeleteFileResponse
	(*MoveFileRequest)(nil),    // 11: fileManager.MoveFileRequest
	(*MoveFileResponse)(nil),   // 12: fileManager.MoveFileResponse
	(*CopyFileRequest)(nil),    // 13: fileManager.CopyFileRequest
	(*CopyFileResponse)(nil),   // 14: fileManager.CopyFileResponse
}
var file_filemanager_proto_depIdxs = []int32{
	0,  // 0: fileManager.PutFileResponse.status:type_name -> fileManager.ResponseStatus
	0,  // 1: fileManager.PostFileResponse.status:type_name -> fileManager.ResponseStatus
	0,  // 2: fileManager.DeleteFileResponse.status:type_name -> fileManager.ResponseStatus
	0,  // 3: fileManager.MoveFileResponse.status:type_name -> fileManager.ResponseStatus
	0,  // 4: fileManager.CopyFileResponse.status:type_name -> fileManager.ResponseStatus
	1,  // 5: fileManager.FileManager.Login:input_type -> fileManager.LoginRequest
	3,  // 6: fileManager.FileManager.PutFile:input_type -> fileManager.PutFileRequest
	7,  // 7: fileManager.FileManager.GetFile:input_type -> fileManager.GetFileRequest
	5,  // 8: fileManager.FileManager.PostFile:input_type -> fileManager.PostFileRequest
	9,  // 9: fileManager.FileManager.DeleteFile:input_type -> fileManager.DeleteFileRequest
	11, // 10: fileManager.FileManager.MoveFile:input_type -> fileManager.MoveFileRequest
	13, // 11: fileManager.FileManager.CopyFile:input_type -> fileManager.CopyFileRequest
	2,  // 12: fileManager.FileManager.Login:output_type -> fileManager.LoginResponse
	4,  // 13: fileManager.FileManager.PutFile:output_type -> fileManager.PutFileResponse
	8,  // 14: fileManager.FileManager.GetFile:output_type -> fileManager.GetFileResponse
	6,  // 15: fileManager.FileManager.PostFile:output_type -> fileManager.PostFileResponse
	10, // 16: fileManager.FileManager.DeleteFile:output_type -> fileManager.DeleteFileResponse
	12, // 17: fileManager.FileManager.MoveFile:output_type -> fileManager.MoveFileResponse
	14, // 18: fileManager.FileManager.CopyFile:output_type -> fileManager.CopyFileResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_filemanager_proto_init() }
func file_filemanager_proto_init() {
	if File_filemanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filemanager_proto_rawDesc), len(file_filemanager_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filemanager_proto_goTypes,
		DependencyIndexes: file_filemanager_proto_depIdxs,
		EnumInfos:         file_filemanager_proto_enumTypes,
		MessageInfos:      file_filemanager_proto_msgTypes,
	}.Build()
	File_filemanager_proto = out.File
	file_filemanager_proto_goTypes = nil
	file_filemanager_proto_depIdxs = nil
}
